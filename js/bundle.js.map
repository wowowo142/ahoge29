{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","textures","donuts","currentDonut","w","h","spScale","isSP","window","innerWidth","score","time","cost","oxy","consumption","currentDragPoint","counter","timer","goal","createTableFromHole","createTableByBreed","setOrderTable","loadTexture","url","tex","PIXI","Texture","from","set","init","Map","Array","app","Application","width","height","backgroundColor","stage","sortableChildren","scale","x","y","gameEl","document","getElementById","innerHTML","appendChild","view","TextMetrics","BASELINE_SYMBOL","back","Sprite","alpha","addChild","field","Container","zIndex","fieldBack","Graphics","beginFill","drawRect","endFill","hole","anchor","pixHeight","texture","_frame","dogContainer","dog","open","costLabel","Text","separateByComma","fontFamily","fontWeight","fontSize","scoreContainer","timeLabel","scoreLabel","oxyContainer","o2Label","oxyBar","pivot","oxyLeft","oxyConsumed","oxyLabel","orderContainer","boxLabel","boxContainerList","boxContainer","box","push","limit","level","orderList","limitLabel","gameOverLabel","resultLabel","forEach","setNewOrder","createDonutByBreed","startScreen","interactive","startButton","buttonMode","on","start","ticker","Ticker","shared","add","destroy","setInterval","donut","createDonut","arguments","length","undefined","Math","floor","random","tween","TweenMax","to","pixi","scaleY","ease","Power1","easeInOut","repeat","yoyo","onComplete","rotation","PI","scaleX","addDonut","createDonutFromHole","tmp","used","type","find","breed","text","updateScore","round","gameOver","updateOxy","predators","filter","console","log","preys","removeDonut","prey","update","onDonutTap","onDonutDragStart","e","target","prev","onDonutDragging","bindedFunc","onDonutDragEnd","addEventListener","pMouse","data","getLocalPosition","gp","removeAllListeners","removeEventListener","b","bx","worldTransform","tx","by","ty","filled","orderCount","payment","bonus","subScore","paymentLabel","fill","shipDonuts","checkOrder","is","splice","noMotionDiscard","noMotion","discardOrder","orderNum","left","clear","resTime","clearInterval","gameclearScreen","restartButton","tweetButton","tweet","num","String","replace","location","href","encodeURIComponent"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * あほげー 29回用\r\n * 何も考えずこれにすべてを書く\r\n */\r\n\r\n\r\n\r\nlet w = 800\r\nlet h = 600\r\nlet spScale = 0.375\r\nlet isSP = window.innerWidth <= 800\r\n\r\nif ( isSP ) {\r\n    w *= spScale\r\n    h *= spScale\r\n}\r\n\r\n// グローバル\r\nlet textures// = new Map()\r\nlet donuts //= new Array()\r\nlet currentDonut// = null\r\nconst goal = 3000000\r\nlet score //= 0\r\nlet time //= 0\r\nlet cost //= 20000\r\nlet oxy //= 1.0\r\nlet consumption //= 0\r\nlet currentDragPoint\r\n\r\nlet counter //= 0\r\nlet timer;\r\nconst createTableFromHole = [\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    1,1,1,1,1,1,1,1,1,1,\r\n    1,1,1,1,1,1,1,2,2,2,\r\n    2,2,2,2,2,2,2,3,3,3\r\n\r\n]\r\n\r\nconst createTableByBreed = [\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    1,1,1,2,2,2,2,2,3,3\r\n]\r\n\r\nconst setOrderTable = [\r\n    0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,1,1,1,1,\r\n    2,2,2,2,2,2,2,2,2,2,\r\n    2,2,2,2,2,2,2,2,2,2,\r\n    3,3,3,3,3,3,3,3,3,3,\r\n]\r\n\r\n\r\n/**\r\n * 指定したurlの画像からテクスチャを生成してグローバルなMapにセット\r\n * @param {String} name \r\n * @param {String} url\r\n */\r\nfunction loadTexture(name, url) {\r\n    let tex = PIXI.Texture.from(url)\r\n    textures.set(name, tex)\r\n    return tex\r\n}\r\n\r\ninit()\r\n\r\nfunction init() {\r\n    textures = new Map()\r\n    donuts = new Array()\r\n    currentDonut = null\r\n    score = 0\r\n    time = 0\r\n    cost = 20000\r\n    oxy = 1.0\r\n    consumption = 0\r\n    currentDragPoint\r\n\r\n    counter = 0\r\n    timer;\r\n    loadTexture('background','./res/img/back.jpg')\r\n    loadTexture('type0','./res/img/donu_plain.png')\r\n    loadTexture('type1','./res/img/donu_green.png')\r\n    loadTexture('type2','./res/img/donu_toxic.png')\r\n    loadTexture('type3','./res/img/donu_predator.png')\r\n    loadTexture('hole','./res/img/hole.png')\r\n    loadTexture('dog_close','./res/img/dog_close.png')\r\n    loadTexture('dog_open','./res/img/dog_open.png')\r\n    loadTexture('box','./res/img/box.png')\r\n    loadTexture('label_box','./res/img/label_box.png')\r\n    loadTexture('label_o2','./res/img/label_o2.png')\r\n    loadTexture('startbutton','./res/img/startbutton.png')\r\n    loadTexture('restartbutton','./res/img/restartbutton.png')\r\n    loadTexture('tweetbutton','./res/img/tweetbutton.png')\r\n\r\n    // PIXIアプリケーション生成\r\n    let app = new PIXI.Application({\r\n            width: w, height: h,\r\n            backgroundColor: 0xffffff,\r\n            // resolution: window.devicePixelRatio || 1,\r\n    })\r\n    app.stage.sortableChildren = true;\r\n\r\n    if (isSP) {\r\n        app.stage.scale.x = app.stage.scale.y = spScale\r\n    }\r\n\r\n    // HTMLに追加\r\n    let gameEl = document.getElementById('game')\r\n    gameEl.innerHTML = ''\r\n    gameEl.appendChild(app.view)\r\n\r\n\r\n    PIXI.TextMetrics.BASELINE_SYMBOL += \"あ｜\";\r\n\r\n\r\n    /**\r\n     * 全体背景\r\n     */\r\n    // let back = loadTexture('background','/res/img/back.jpg')\r\n    let back = new PIXI.Sprite(textures.get('background'))\r\n    back.alpha = 0.5\r\n    // back.x = app.screen.width / 2\r\n    // back.y = app.screen.height / 2\r\n    app.stage.addChild(back)\r\n\r\n\r\n    /**\r\n     * フィールド\r\n     */\r\n    let field = new PIXI.Container()\r\n    field.sortableChildren = true;\r\n    field.zIndex = 100\r\n    field.x = 80\r\n    field.y = 70\r\n    app.stage.addChild(field)\r\n\r\n    let fieldBack = new PIXI.Graphics()\r\n    .beginFill(0xeeffff)\r\n    .drawRect(0, 0, 500, 450)\r\n    .endFill()\r\n    fieldBack.alpha = 0.8\r\n    field.addChild(fieldBack)\r\n\r\n    // 穴\r\n    let hole = new PIXI.Sprite(textures.get('hole'))\r\n    hole.anchor.y = 0.5\r\n    hole.zIndex = 10000\r\n    hole.pixHeight = hole.texture._frame.height\r\n    hole.y = 50\r\n    hole.scale.y = 0\r\n    field.addChild(hole)\r\n\r\n\r\n    // 宇宙犬\r\n    let dogContainer = new PIXI.Container();\r\n    dogContainer.y = 445\r\n    dogContainer.zIndex = 1000\r\n    app.stage.addChild(dogContainer);\r\n    let dog = new PIXI.Sprite(textures.get('dog_close'))\r\n    dog.open = false;\r\n    dogContainer.addChild(dog);\r\n    // お値段\r\n    let costLabel =  new PIXI.Text('₫'+ separateByComma(cost),\r\n            {fontFamily : '游ゴシック,Osaka', fontWeight: 'bold', fontSize: 15});\r\n    costLabel.x = 15;\r\n    costLabel.y = 18;\r\n    dogContainer.addChild(costLabel);\r\n\r\n\r\n    /**\r\n     * UI\r\n     */\r\n    let scoreContainer = new PIXI.Container()\r\n    app.stage.addChild(scoreContainer)\r\n\r\n    // 日数\r\n    let timeLabel =  new PIXI.Text(time + '日経過',\r\n            {fontFamily : '游ゴシック,Osaka', fontWeight: 'bold', fontSize: 30});\r\n    timeLabel.x = 20;\r\n    timeLabel.y = 10;\r\n    scoreContainer.addChild(timeLabel);\r\n\r\n    let scoreLabel =  new PIXI.Text('目標金額まで : ₫' + separateByComma(goal - score),\r\n            {fontFamily : '游ゴシック,Osaka', fontWeight: 'bold', fontSize: 20});\r\n    scoreLabel.anchor.x = 1.0\r\n    scoreLabel.x = 780\r\n    scoreLabel. y = 15\r\n    scoreContainer.addChild(scoreLabel)\r\n\r\n\r\n\r\n\r\n    // 酸素残量\r\n    let oxyContainer = new PIXI.Container()\r\n    oxyContainer.x = 750\r\n    oxyContainer.y = 170\r\n    app.stage.addChild(oxyContainer)\r\n\r\n    let o2Label = new PIXI.Sprite(textures.get('label_o2'))\r\n    // o2Label.scale.x  = o2Label.scale.y = 0.8\r\n    o2Label.y -= 80\r\n    oxyContainer.addChild(o2Label)\r\n\r\n    let oxyBar = new PIXI.Graphics()\r\n    .beginFill(0xaaaaaa)\r\n    .drawRect(0, 0, 30, 410)\r\n    .endFill()\r\n    oxyBar.pivot.x = 0.5\r\n\r\n    let oxyLeft = new PIXI.Graphics()\r\n    .beginFill(0x44ff44)\r\n    .drawRect(0, 0, 20, 400)\r\n    .endFill()\r\n    oxyLeft.pivot.x = 0.5\r\n    oxyLeft.x = 5\r\n    oxyLeft.y = 5\r\n    let oxyConsumed = new PIXI.Graphics()\r\n    .beginFill(0x444444)\r\n    .drawRect(0, 0, 20, 400)\r\n    .endFill()\r\n    oxyConsumed.pivot.x = 0.5\r\n    oxyConsumed.x = 5\r\n    oxyConsumed.y = 5\r\n    oxyConsumed.scale.y = 0\r\n\r\n    let oxyLabel =  new PIXI.Text('酸素消費量 : ' + consumption*100 + '%/日',\r\n            {fontFamily : '游ゴシック,Osaka', fontWeight: 'bold', fontSize: 15});\r\n    oxyLabel.anchor.x = 1.0\r\n    oxyLabel.x = 0\r\n    oxyLabel. y = 400\r\n\r\n    oxyContainer.addChild(oxyBar)\r\n    oxyContainer.addChild(oxyLeft)\r\n    oxyContainer.addChild(oxyConsumed)\r\n    oxyContainer.addChild(oxyLabel)\r\n\r\n\r\n    // 受注ボックス\r\n    let orderContainer = new PIXI.Container()\r\n    orderContainer.x = 600\r\n    orderContainer.y = 100\r\n    app.stage.addChild(orderContainer)\r\n\r\n    let boxLabel = new PIXI.Sprite(textures.get('label_box'))\r\n    boxLabel.scale.x  = boxLabel.scale.y = 0.8\r\n    orderContainer.addChild(boxLabel)\r\n\r\n    let boxContainerList = new Array()\r\n\r\n    for (let i=0; i < 3; i++) {\r\n        let boxContainer = new PIXI.Container();\r\n        boxContainer.y = 80 + i*120\r\n        boxContainer.box = new PIXI.Sprite(textures.get('box'))\r\n        boxContainer.addChild(boxContainer.box)\r\n        boxContainerList.push(boxContainer)\r\n        boxContainer.box.limit = 15\r\n        boxContainer.level = i+1;\r\n        boxContainer.orderList = new Array();\r\n        boxContainer.box.limitLabel =  new PIXI.Text('あと' + boxContainer.box.limit + '日',\r\n                {fontFamily : '游ゴシック,Osaka', fontWeight: 'bold', fontSize: 15});\r\n        scoreLabel.anchor.x = 1.0\r\n        boxContainer.box.limitLabel.x = 35\r\n        boxContainer.box.limitLabel.y = 75\r\n        boxContainer.addChild(boxContainer.box.limitLabel)\r\n        orderContainer.addChild(boxContainer)\r\n    }\r\n\r\n\r\n\r\n    let gameOverLabel =  new PIXI.Text('',\r\n            {fontFamily : '游ゴシック,Osaka', fontWeight: 'bold', fontSize: 60});\r\n    let resultLabel =  new PIXI.Text('',\r\n        {fontFamily : '游ゴシック,Osaka', fontWeight: 'bold', fontSize: 60});\r\n\r\n\r\n    Array.prototype.forEach.call(boxContainerList, (c) =>  {\r\n    setNewOrder(c, true)  \r\n    })\r\n\r\n    createDonutByBreed(1);\r\n    createDonutByBreed();\r\n    createDonutByBreed();\r\n    createDonutByBreed();\r\n    createDonutByBreed();\r\n    createDonutByBreed();\r\n    createDonutByBreed();\r\n    createDonutByBreed(1);\r\n\r\n\r\n\r\n\r\n    let startScreen = new PIXI.Graphics()\r\n    .beginFill(0x000000)\r\n    .drawRect(0, 0, 800, 600)\r\n    .endFill()\r\n    startScreen.alpha = 0.95\r\n    startScreen.interactive = true;\r\n    startScreen.zIndex = 100000\r\n    app.stage.addChild(startScreen)\r\n    let startButton = new PIXI.Sprite(textures.get('startbutton'));\r\n    startButton.anchor.set(0.5)\r\n    startButton.zIndex = 100001\r\n    startButton.interactive = true;\r\n    startButton.buttonMode = true;\r\n    startButton.x = 400\r\n    startButton.y = 300\r\n    app.stage.addChild(startButton)\r\n\r\n    startScreen.on('pointertap', start);\r\n    startButton.on('pointertap', start);\r\n\r\n\r\n\r\n    function start() {\r\n        let ticker = PIXI.Ticker.shared;\r\n        ticker.add(() => {\r\n            // app.renderer.render(app.stage);\r\n        })\r\n        startScreen.destroy();\r\n        startButton.destroy();\r\n        timer = setInterval(() => {\r\n            update();\r\n        }, 1000)\r\n    }\r\n\r\n\r\n    function update () {\r\n        counter++;\r\n        if (counter % 2 == 0) {\r\n            createDonutFromHole(createTableFromHole[Math.floor(Math.random() * (createTableFromHole.length-1))]) ;\r\n        }\r\n\r\n        if (counter % 8 == 0) {\r\n            breed();\r\n        }\r\n\r\n        updateOrder()\r\n        updateScore()\r\n        updateTime()\r\n        updateOxy()\r\n        prey()\r\n    }\r\n\r\n    /**\r\n     * ドーナツリストにドーナツを追加\r\n     * @param {PIXI.Sprite} donut \r\n     */\r\n    function addDonut(donut) {\r\n        donuts.push(donut)\r\n        donut.interactive = true;\r\n        donut.buttonMode = true;\r\n        donut.tween = TweenMax.to(donut, 0.5,\r\n            {  pixi:\r\n                { scaleX: 1.02, scaleY: 1.05 }, ease: Power1.easeInOut, repeat: -1, yoyo: true,\r\n                onComplete: () => { \r\n                    donut.rotation = 0;\r\n                    TweenMax.to(donut, 0.5,\r\n                        {  pixi:\r\n                            { y: donut.y + 20 },\r\n                            ease: Power1.easeInOut,\r\n                            onComplete: () => { addDonut(donut) }\r\n                        }\r\n                    )\r\n                } \r\n            }\r\n        )\r\n        donut.on('pointertap', onDonutTap)\r\n        donut.on('pointerdown', onDonutDragStart)\r\n    }\r\n\r\n\r\n    function onDonutTap(e) {\r\n        // removeDonut(e.target)\r\n    }\r\n\r\n    /**\r\n     * ドラッグ開始\r\n     */\r\n    function onDonutDragStart(e) {\r\n        let d = e.target;\r\n        currentDonut = d;\r\n        d.prev = {x: d.x, y: d.y}\r\n        d.on('pointermove', onDonutDragging)\r\n        window.bindedFunc = onDonutDragEnd\r\n        window.addEventListener('pointerup', window.bindedFunc);\r\n    }\r\n\r\n    /**\r\n     * ドラッグ中\r\n     */\r\n    function onDonutDragging(e) {\r\n        let d = currentDonut;\r\n        let pMouse = e.data.getLocalPosition(field);\r\n        d.x = pMouse.x\r\n        d.y = pMouse.y\r\n        currentDragPoint = e.data.getLocalPosition(app.stage);\r\n\r\n        let gp = currentDragPoint;\r\n        if (80 < gp.x && gp.x < 140 && 540 < gp.y && gp.y < 580) {\r\n            if (!dog.open) {\r\n                dog.open = true;\r\n                dog.texture = textures.get('dog_open');\r\n            }\r\n        }\r\n        else if (dog.open) {\r\n            dog.open = false;\r\n            dog.texture = textures.get('dog_close');\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * ドラッグ終了\r\n     */\r\n    function onDonutDragEnd(e) {\r\n        let d = currentDonut;\r\n        d.removeAllListeners('pointermove');\r\n        if (window.bindedFunc != null) { \r\n            window.removeEventListener('pointerup', window.bindedFunc);\r\n            window.bindedFunc = null;\r\n        }\r\n        currentDonut = null;\r\n\r\n        let gp = currentDragPoint;\r\n        if (80 < gp.x && gp.x < 140 && 540 < gp.y && gp.y < 580) {\r\n            feedDog(d);\r\n        }\r\n        Array.prototype.forEach.call(boxContainerList,(b) => {\r\n            let bx = b.worldTransform.tx\r\n            let by = b.worldTransform.ty\r\n            if (bx < gp.x && gp.x < bx+120 && by < gp.y && gp.y < by+70) {\r\n                checkOrder(b,d)\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * ドーナツを削除\r\n     * @param {PIXI.Sprite} donut \r\n     */\r\n    function removeDonut(donut) {\r\n        for(let i = 0; i < donuts.length; i++) {\r\n            if ( Object.is(donuts[i], donut) ) {\r\n                donuts.splice(i,1);\r\n            }\r\n        }\r\n        donut.destroy();\r\n        \r\n    }\r\n\r\n\r\n    /**\r\n     * ドーナツ生成\r\n     */\r\n    function createDonut(type=0) {\r\n        let donut = new PIXI.Sprite(textures.get('type' + type))\r\n        field.addChild(donut)\r\n        donut.anchor.x = 0.5\r\n        donut.anchor.y = 0.5\r\n        donut.type = type;\r\n        return donut;\r\n    }\r\n\r\n\r\n    /**\r\n     * 穴からドーナツ\r\n     * @param {String} type ドーナツの種類\r\n     */\r\n    function createDonutFromHole(type=0) {\r\n        // ドーナツ\r\n        let donut = createDonut(type)\r\n\r\n        hole.scale.y = 0\r\n        hole.x = Math.floor(Math.random() * 440 + 20)\r\n        hole.y = Math.floor(Math.random() * 390 + 20)\r\n        hole.tween = TweenMax.to(hole, 0.3, \r\n            {  pixi:\r\n                { scaleY: 1.0 }, ease: Power1.easeInOut, repeat: 1, yoyo: true,\r\n                onComplete: () => { \r\n                    hole.tween = null\r\n                } \r\n            }\r\n        )\r\n        donut.x = hole.x + 20\r\n        donut.y = hole.y\r\n        donut.rotation = - Math.PI / 2\r\n        donut.scale.x = donut.scale.y = 0\r\n\r\n        TweenMax.to(donut, 0.5,\r\n            {  pixi:\r\n                { scaleX: 1.0, scaleY: 1.0, x: donut.x + 10 },ease: Power1.easeInOut,\r\n                onComplete: () => { \r\n                    donut.rotation = 0;\r\n                    TweenMax.to(donut, 0.5,\r\n                        {  pixi:\r\n                            { y: donut.y + 20 },\r\n                            ease: Power1.easeInOut,\r\n                            onComplete: () => { addDonut(donut) }\r\n                        }\r\n                    )\r\n                } \r\n            }\r\n        )\r\n    }\r\n\r\n    function createDonutByBreed(type=0) {\r\n        let donut = createDonut(type)\r\n        donut.x = Math.floor(Math.random() * 455 + 20)\r\n        donut.y = Math.floor(Math.random() * 415 + 20)\r\n        donut.scale.x = donut.scale.y = 0\r\n        TweenMax.to(donut, 0.5,\r\n            {  pixi:\r\n                { scaleX: 1.0, scaleY: 1.0, },ease: Power1.easeInOut,\r\n                onComplete: () => { \r\n                    addDonut(donut)\r\n                } \r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * 犬にくわせる\r\n     */\r\n    function feedDog(donut) {\r\n        removeDonut(donut)\r\n        score -= cost;\r\n        cost *= 2\r\n        costLabel.text = '₫'+ separateByComma(cost)\r\n        dog.open = false;\r\n        dog.texture = textures.get('dog_close')\r\n        updateScore()\r\n    }\r\n\r\n\r\n    function setNewOrder(boxContainer, noMotionDiscard = false) {\r\n        discardOrder(boxContainer, noMotionDiscard)\r\n        let box = boxContainer.box\r\n        let orderNum = (boxContainer.level-1)*2 + 1\r\n        for(let i=0; i <  orderNum; i++) {\r\n            let type\r\n            switch(boxContainer.level) {\r\n                case 1:\r\n                    type = Math.floor((Math.random()-0.00001)*2)\r\n                    break;\r\n                default:\r\n                    type = setOrderTable[Math.floor((Math.random()-0.00001)*setOrderTable.length)]\r\n            }\r\n            let d = new PIXI.Sprite(textures.get('type'+type));\r\n            d.type = type;\r\n            d.anchor.set(0.5)\r\n            d.scale.x = d.scale.y = 0.8\r\n            d.x = 35 + i * 15;\r\n            d.y = 35;\r\n            d.alpha = 0.5\r\n            d.rotation = - Math.PI / 2\r\n            d.filled = false\r\n            boxContainer.addChild(d);\r\n            boxContainer.orderList.push(d)\r\n            boxContainer.orderCount = orderNum\r\n        }\r\n        box.limit = 5 + (boxContainer.level-1) * 10 \r\n        box.limitLabel.text = 'あと' + box.limit + '日'\r\n    }\r\n\r\n\r\n    function checkOrder(boxContainer,donut) {\r\n        let r = Array.prototype.find.call(boxContainer.orderList, (o) => {\r\n            return (o.type == donut.type && !o.filled)\r\n        })\r\n        if (r != undefined) {\r\n            removeDonut(donut)\r\n            r.alpha = 1;\r\n            r.filled = true;\r\n            boxContainer.orderCount -= 1\r\n        }\r\n\r\n        if (boxContainer.orderCount == 0) {\r\n            shipDonuts(boxContainer);\r\n        }\r\n    }\r\n\r\n\r\n    function shipDonuts(boxContainer) {\r\n        let payment = 0;\r\n        let bonus = 1.0;\r\n        let counter = 0;\r\n        Array.prototype.forEach.call(boxContainer.orderList, (o) => {\r\n            counter += 1\r\n            switch(o.type) {\r\n                case 0:\r\n                    payment += 10000\r\n                    bonus *= 1.5\r\n                    break\r\n                case 1:\r\n                    payment += 20000\r\n                    bonus *= 3.0\r\n                    break\r\n                case 2:\r\n                    payment += 100000\r\n                    bonus *= 0.9\r\n                    break\r\n                case 3:\r\n                    payment += 300000\r\n                    bonus *= 1.5\r\n                    break\r\n                default: \r\n                    break\r\n            }\r\n        })\r\n        let subScore = payment\r\n        if (counter > 1) {\r\n            subScore = Math.floor(subScore * bonus)\r\n        }\r\n        score += subScore\r\n\r\n        let paymentLabel = new PIXI.Text('+₫' + separateByComma(subScore),\r\n                        {fontFamily : '游ゴシック,Osaka', fontWeight: 'bold', fill : 0xff0000 , fontSize: 25});\r\n        paymentLabel.anchor.x = 1.0\r\n        paymentLabel.x = 740\r\n        paymentLabel.y = 60\r\n        paymentLabel.alpha = 0\r\n        app.stage.addChild(paymentLabel)\r\n        TweenMax.to(paymentLabel, 0.5, {\r\n            pixi: {y: paymentLabel.y - 20, alpha: 1.0}, ease: Power1.easeInOut,\r\n            onComplete: () => {\r\n                updateScore();\r\n                TweenMax.to(paymentLabel, 0.3, {\r\n                    pixi: {alpha: 0}, ease: Power1.easeInOut,\r\n                    onComplete: () => {\r\n                        paymentLabel.destroy();\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        let bx = boxContainer.x\r\n        let by = boxContainer.y\r\n        TweenMax.to(boxContainer, 0.5, {\r\n            pixi: {y: -1000},\r\n            onComplete: () => {\r\n                setNewOrder(boxContainer, true)\r\n                TweenMax.to(boxContainer, 0.5, {\r\n                    pixi: {y: by}\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    function discardOrder(boxContainer, noMotion = false) {\r\n        Array.prototype.forEach.call(boxContainer.orderList, (o) => {\r\n            o.destroy();\r\n        })\r\n        boxContainer.orderList = new Array();\r\n        let bx = boxContainer.x\r\n        let by = boxContainer.y\r\n        if(!noMotion) {\r\n            TweenMax.to(boxContainer, 0.5, {\r\n                pixi: {x: 1000},\r\n                onComplete: () => {\r\n                    setNewOrder(boxContainer)\r\n                    TweenMax.to(boxContainer, 0.5, {\r\n                        pixi: {x: bx}\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function updateOrder() {\r\n        Array.prototype.forEach.call(boxContainerList, (c) =>  {\r\n            let box = c.box\r\n            box.limit -= 1;\r\n            if (box.limit == 0) {\r\n                setNewOrder(c,false)\r\n            }\r\n            box.limitLabel.text = 'あと' + box.limit + '日'\r\n        })\r\n    }\r\n\r\n    function updateScore() {\r\n        let left\r\n        if (goal - score < 0) {\r\n            left = 0\r\n        } else {\r\n            left = goal - score \r\n        }\r\n\r\n        scoreLabel.text = '目標金額まで : ₫' + separateByComma(left)\r\n        if (left <= 0) {\r\n            gameOver(true)\r\n        }\r\n    }\r\n\r\n    function updateTime() {\r\n        time++\r\n        timeLabel.text = time + '日経過'\r\n    }\r\n\r\n\r\n    function updateOxy() {\r\n        consumption = 0;\r\n        for(let i = 0; i < donuts.length; i++) {\r\n            switch(donuts[i].type) {\r\n                case 0:\r\n                    oxy -= 0.0006\r\n                    consumption += 0.0006\r\n                    break;\r\n                case 1:\r\n                    oxy += 0.005\r\n                    consumption -= 0.005\r\n                    break\r\n                case 2:\r\n                    oxy -= 0.02\r\n                    consumption += 0.02\r\n                    break\r\n                case 3:\r\n                    oxy += 0\r\n                    break\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (oxy > 1.0) {\r\n            oxy = 1.0\r\n        }\r\n        else if( oxy  < 0) {\r\n            oxy = 0\r\n        }\r\n        oxyConsumed.scale.y = 1.0 - oxy\r\n        oxyLabel.text =  '酸素消費量 : ' + Math.round(consumption*10000) / 100 + '%/日'\r\n\r\n        if (oxy == 0) {\r\n            gameOver(false);\r\n        }\r\n    }\r\n\r\n    function prey() {\r\n        let predators = Array.prototype.filter.call(donuts, (p) => {\r\n            return p.type == 3\r\n        })\r\n\r\n        console.log(predators);\r\n\r\n        let preys = Array.prototype.filter.call(donuts, (p) => {\r\n            return p.type != 3\r\n        })\r\n\r\n        for (let i=0; i < predators.length*2 && i < preys.length - predators.length*12; i++) {\r\n            removeDonut(preys[i]);\r\n        }\r\n    }\r\n\r\n    function breed() {\r\n        // シャッフル\r\n        for(var i = donuts.length - 1; i > 0; i--){\r\n            var r = Math.floor(Math.random() * (i + 1));\r\n            var tmp = donuts[i];\r\n            donuts[i] = donuts[r];\r\n            donuts[r] = tmp;\r\n        }\r\n\r\n        // 繁殖使用済みフラグ\r\n        for (let i=0; i < donuts.length; i++) {\r\n            if ( i >= donuts.length/2) {\r\n                donuts[i].used = false;\r\n            } else {\r\n                donuts[i].used = true;\r\n            }\r\n        }\r\n\r\n        // 繁殖実行\r\n        for (let i=0; i < donuts.length / 2; i++) {\r\n            donuts[i].used = true\r\n            let r\r\n            switch(donuts[i].type) {\r\n                case 0:\r\n                    createDonutByBreed(createTableByBreed[Math.floor(Math.random)*createTableByBreed.length])\r\n                    break\r\n                case 1: \r\n                    r = Array.prototype.find.call(donuts, (d) => {\r\n                        return (d.type == 1 && d.used == false)\r\n                    })\r\n                    if ( r != undefined) {\r\n                        r.used = true;\r\n                        createDonutByBreed(1)\r\n                    }\r\n                    else {\r\n                        createDonutByBreed(2)\r\n                    }\r\n                    break\r\n                case 2:\r\n                    createDonutByBreed(Math.floor(Math.random() + 3))\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function gameOver(clear = false) {\r\n        let resTime = time+1\r\n        clearInterval(timer);\r\n        gameOverLabel.anchor.set(0.5)\r\n        gameOverLabel.x = 400;\r\n        gameOverLabel.y = 100;\r\n        gameOverLabel.zIndex = 1000000\r\n        app.stage.addChild(gameOverLabel);   \r\n        if (clear) {\r\n            resultLabel =  new PIXI.Text('',\r\n                 {fontFamily : '游ゴシック,Osaka', fontWeight: 'bold', fontSize: 30});\r\n        } else {\r\n            resultLabel =  new PIXI.Text('',\r\n                {fontFamily : '游ゴシック,Osaka', fontWeight: 'bold', fill:0xffffff, fontSize: 30});\r\n        }\r\n        resultLabel.anchor.set(0.5)\r\n        resultLabel.x = 400;\r\n        resultLabel.y = 250;\r\n        resultLabel.zIndex = 1000000\r\n        app.stage.addChild(resultLabel); \r\n        if (clear) {\r\n            gameOverLabel.text = 'ゲームクリア！'\r\n            resultLabel.text = '左遷から ' + (time+1) + ' 日後に地球へ帰還した。\\r\\nこれからもお仕事頑張ろう！'\r\n            let gameclearScreen = new PIXI.Graphics()\r\n            .beginFill(0xffffff)\r\n            .drawRect(0, 0, 800, 600)\r\n            .endFill()\r\n            gameclearScreen.alpha = 0.6\r\n            gameclearScreen.interactive = true;\r\n            gameclearScreen.zIndex = 50000\r\n            app.stage.addChild(gameclearScreen)\r\n        }\r\n        else {\r\n            gameOverLabel.text = 'ゲームオーバー...'\r\n            resultLabel.text = '左遷から ' + resTime + ' 日目に酸欠で倒れた。\\r\\n退職してうきうきニート生活！'\r\n            let gameclearScreen = new PIXI.Graphics()\r\n            .beginFill(0x000000)\r\n            .drawRect(0, 0, 800, 600)\r\n            .endFill()\r\n            gameclearScreen.alpha = 0.6\r\n            gameclearScreen.interactive = true;\r\n            gameclearScreen.zIndex = 100000\r\n            app.stage.addChild(gameclearScreen)\r\n        }\r\n        let restartButton = new PIXI.Sprite(textures.get('restartbutton'));\r\n        restartButton.anchor.set(0.5)\r\n        restartButton.zIndex = 100001\r\n        restartButton.interactive = true;\r\n        restartButton.buttonMode = true;\r\n        restartButton.x = 300\r\n        restartButton.y = 400\r\n        app.stage.addChild(restartButton)\r\n        restartButton.on('pointertap',init)\r\n\r\n        let tweetButton = new PIXI.Sprite(textures.get('tweetbutton'));\r\n        tweetButton.anchor.set(0.5)\r\n        tweetButton.zIndex = 100001\r\n        tweetButton.interactive = true;\r\n        tweetButton.buttonMode = true;\r\n        tweetButton.x = 500\r\n        tweetButton.y = 400\r\n        app.stage.addChild(tweetButton)\r\n\r\n        tweetButton.on('pointertap',tweet)\r\n    }\r\n\r\n    function separateByComma(num){\r\n        return String(num).replace( /(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\r\n    }\r\n\r\n    function tweet(url,text) {\r\n        window.open().location.href = (\"https://twitter.com/share?url=\" + url + \"&text=\" + encodeURIComponent(resultLabel.text.replace(\"\\r\\n\",'') + ' #ahoge') + \"&count=none&lang=ja\");\r\n    }\r\n}"],"sourceRoot":""}